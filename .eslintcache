[{"/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Components/Header.js":"1","/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Containers/BidContainer.js":"2","/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Components/TeamPage.js":"3","/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Components/App.js":"4","/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Forms/AddPlayerForm.js":"5","/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Forms/NewBidForm.js":"6","/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/index.js":"7","/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Forms/FilterForm.js":"8","/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Forms/NewFreeAgentForm.js":"9","/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Containers/PlayerContainer.js":"10","/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Components/PlayerCard.js":"11","/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/exports/selctions.js":"12"},{"size":549,"mtime":1612900656596,"results":"13","hashOfConfig":"14"},{"size":1709,"mtime":1613003196849,"results":"15","hashOfConfig":"14"},{"size":2526,"mtime":1613028453850,"results":"16","hashOfConfig":"14"},{"size":2919,"mtime":1613006949050,"results":"17","hashOfConfig":"14"},{"size":3078,"mtime":1613027100621,"results":"18","hashOfConfig":"14"},{"size":2039,"mtime":1612980332788,"results":"19","hashOfConfig":"14"},{"size":278,"mtime":1612390588472,"results":"20","hashOfConfig":"14"},{"size":947,"mtime":1612976050105,"results":"21","hashOfConfig":"14"},{"size":1929,"mtime":1613020897262,"results":"22","hashOfConfig":"14"},{"size":1768,"mtime":1612974936408,"results":"23","hashOfConfig":"14"},{"size":1012,"mtime":1613002504222,"results":"24","hashOfConfig":"14"},{"size":744,"mtime":1613026142265,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f67iga",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Components/Header.js",[],"/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Containers/BidContainer.js",[],"/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Components/TeamPage.js",["53","54"],"/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Components/App.js",["55","56"],"import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport PlayerContainer from '../Containers/PlayerContainer';\nimport TeamContainer from '../Containers/TeamContainer';\nimport Header from '../Components/Header';\nimport TeamPage from '../Components/TeamPage';\n\nfunction App() {\n\n    const [users, setUsers] = useState([])\n    const [teams, setTeams] = useState([])\n    const [players, setPlayers] = useState([])\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [positionTerm, setPositionTerm] = useState(\"C\")\n\n    useEffect(() => {\n      fetch(`${process.env.REACT_APP_API_BASE_URL}/players`)\n          .then((response) => response.json())\n          .then(setPlayers)\n    },[])\n      // console.log(\"Players\", players)\n\n    useEffect(() => {\n      fetch(`${process.env.REACT_APP_API_BASE_URL}/teams`)\n          .then((response) => response.json())\n          .then(setTeams)\n    },[])\n      // console.log(\"Teams\", teams)\n\n    useEffect(() => {\n      fetch(`${process.env.REACT_APP_API_BASE_URL}/users`)\n          .then((response) => response.json())\n          .then(setUsers)\n    },[])\n      // console.log(\"Users\", users)    \n    let sortedList = teams.sort()\n      .map((team, index) => <option key={index}>{team.name}</option>);\n\n    function handleNewFreeAgent(newPlayer) {\n      console.log(newPlayer)\n      const updatedPlayersArray = [...players, newPlayer]\n      setPlayers(updatedPlayersArray)\n    }\n\n    const playersToDisplay = players.filter((player) =>\n        player.position.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    // const positionsToDisplay = players.filter((player) =>\n    //     player.position.toLowerCase().includes(positionTerm.toLowerCase())\n    // );\n\n    return (\n      <div className=\"App\">\n        <Header />\n          <Switch>\n            <Route exact path=\"/teams\">\n              <TeamContainer teams={teams}\n                            players={players}\n              />\n            </Route>\n            <Route exact path=\"/players\">\n              <PlayerContainer teams={teams} \n                              players={playersToDisplay}\n                              setPlayers={setPlayers}\n                              sortedList={sortedList}\n                              localHandleNewFreeAgent={handleNewFreeAgent}\n                              searchTerm={searchTerm}\n                              onChangeSearch={setSearchTerm}\n                              playersToDisplay={playersToDisplay}\n                              // positionTerm={positionTerm}\n                              // setPositionTerm={setPositionTerm}\n\n              />\n            </Route>\n            <Route exact path=\"/teams/:id\">\n              <TeamPage users={users} sortedList={sortedList} localHandleAddPlayer={handleNewFreeAgent} />\n            </Route>\n          </Switch>\n      </div>\n    );\n}\n\nexport default App;\n","/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Forms/AddPlayerForm.js",[],"/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Forms/NewBidForm.js",[],"/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/index.js",[],["57","58"],"/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Forms/FilterForm.js",[],"/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Forms/NewFreeAgentForm.js",[],"/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Containers/PlayerContainer.js",["59","60"],"import React, { useState } from 'react';\nimport PlayerCard from '../Components/PlayerCard';\nimport NewFreeAgentForm from '../Forms/NewFreeAgentForm';\nimport FilterForm from '../Forms/FilterForm';\n\nfunction PlayerContainer({ teams, players, setPlayers, sortedList, localHandleNewFreeAgent, searchTerm, onChangeSearch, positionTerm, setPositionTerm }) {\n\n    const renderPlayers = players.map((player) => { \n            if (player.team.name === \"Free Agent\") {\n                return (\n                    <div>\n                        <PlayerCard \n                            key={player.id}\n                            id={player.id}\n                            name={player.name} \n                            position={player.position}\n                            real_mlb_team={player.real_mlb_team}\n                            team={player.team.name}\n                            years={player.years}\n                            salary_per_year={player.salary_per_year}\n                            bids={player.bids}\n                            teams={teams}\n                            setPlayers={setPlayers}\n                            sortedList={sortedList}\n                        />\n                    </div>\n                )}\n            })\n\n    return (\n        <>\n        <div className=\"form-container\">\n            <NewFreeAgentForm\n                sortedList={sortedList}\n                localHandleNewFreeAgent={localHandleNewFreeAgent}\n            />\n            <FilterForm searchTerm={searchTerm} onChangeSearch={onChangeSearch} positionTerm={positionTerm} setPositionTerm={setPositionTerm} />\n        </div>\n        <div className=\"player-container\">\n            {renderPlayers}\n        </div>\n        </>\n    )\n}\n\nexport default PlayerContainer;","/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Components/PlayerCard.js",[],"/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/exports/selctions.js",[],{"ruleId":"61","severity":1,"message":"62","line":29,"column":49,"nodeType":"63","messageId":"64","endLine":29,"endColumn":51},{"ruleId":"61","severity":1,"message":"62","line":36,"column":47,"nodeType":"63","messageId":"64","endLine":36,"endColumn":49},{"ruleId":"65","severity":1,"message":"66","line":14,"column":12,"nodeType":"67","messageId":"68","endLine":14,"endColumn":24},{"ruleId":"65","severity":1,"message":"69","line":14,"column":26,"nodeType":"67","messageId":"68","endLine":14,"endColumn":41},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"65","severity":1,"message":"74","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"61","severity":1,"message":"62","line":8,"column":48,"nodeType":"63","messageId":"64","endLine":8,"endColumn":50},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'positionTerm' is assigned a value but never used.","Identifier","unusedVar","'setPositionTerm' is assigned a value but never used.","no-native-reassign",["75"],"no-negated-in-lhs",["76"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]