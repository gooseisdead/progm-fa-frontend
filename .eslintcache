[{"/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Components/Header.js":"1","/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Forms/AddPlayerForm.js":"2","/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Components/TeamPage.js":"3","/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Forms/Buyout.js":"4","/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Forms/NonTender.js":"5"},{"size":665,"mtime":1613144294665,"results":"6","hashOfConfig":"7"},{"size":6494,"mtime":1613663027057,"results":"8","hashOfConfig":"7"},{"size":4431,"mtime":1613664138577,"results":"9","hashOfConfig":"7"},{"size":393,"mtime":1613663312264,"results":"10","hashOfConfig":"7"},{"size":509,"mtime":1613663457282,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f67iga",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":1,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Components/Header.js",[],"/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Forms/AddPlayerForm.js",[],"/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Components/TeamPage.js",["23","24","25","26","27"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport AddPlayerForm from '../Forms/AddPlayerForm';\nimport MinorLeagueManager from '../Forms/MinorLeagueManager';\nimport Demotions from '../Forms/Demotions';\nimport NonTender from '../Forms/NonTender';\nimport Buyout from '../Forms/Buyout';\n\nfunction TeamPage({ sortedList, localHandleAddPlayer, onDelete, on40Man, onDemotion, onNonTender }) {\n\n    const [team, setTeam] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [showForm, setShowForm] = useState(false)\n    const [showOptions, setShowOptions] = useState(false)\n    const params = useParams();\n\n    useEffect(() => {\n      fetch(`${process.env.REACT_APP_API_BASE_URL}/teams/${params.id}`)\n        .then((r) => r.json())\n        .then((team) => {\n          setTeam(team);\n          setIsLoaded(true);\n        });\n    }, [params.id]);\n\n    if (!isLoaded) return <h2>Loading...</h2>;\n\n    const { name, logo, players, user } = team;\n\n    players.sort(function (a, b) {\n        return a.position - b.position; })\n\n    let salaryArray = players.map((player) => player.salary_per_year)\n    let totalSalary = salaryArray.reduce(function(a, b) {\n        return a + b;\n    }, 0);\n\n    const allOthers = [\"2nd Year\", \"3rd Year\", \"4th Year\", \"5th Year\", \"6th Year\"]\n    \n    const renderFortyMan = players.map((player) => {\n        if (player.minor_league_status === false) {\n            return (\n                <p className=\"forty-man-line\">{player.position} .... <b>{player.name}</b>\n                 ... ${player.salary_per_year.toFixed(1)} million\n                 ({player.team_control === \"minors\" ? player.team_control : player.years})\n                 {player.team_control === \"minors\" ? <Demotions id={player.id} onDemotion={onDemotion}/> : null}\n                 {allOthers.includes(player.team_control) ? <NonTender id={player.id} onNonTender={onNonTender}/> : null}\n                 {player.team_control === \"Free Agent\" ? <Buyout id={player.id} onNonTender={onNonTender}/> : null}</p>\n            )}\n        })\n\n    const renderMinors = players.map((player) => {\n        if (player.minor_league_status === true) {\n            return (\n                <p className=\"minors-line\">{player.position} .... <b>{player.name}</b> ... ${player.salary_per_year.toFixed(1)} million ({player.team_control}) <MinorLeagueManager id={player.id} onDelete={onDelete} on40Man={on40Man} /></p>\n            )}\n        })\n\n    function clickHandler() {\n        setShowForm((showForm) => !showForm)\n    }\n\n    const toKebabCase = str =>\n        str &&\n        str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map(x => x.toLowerCase())\n    .join('-');\n    \n    return (\n        <>\n        <h1 className=\"team-name-header\">{name}</h1>\n                <p className=\"gm-line\">GM: <b>{user.username}</b></p>\n                <img src={logo} alt={name} className=\"team-logo-page\"></img><br></br>\n        <div className=\"team-page-container\">\n        <div className={toKebabCase(team.name)}>\n        <button onClick={clickHandler} className='admin-button'>Show/hide admin form</button>\n          {showForm ? \n            <AddPlayerForm key={params}\n                            params={params}\n                            sortedList={sortedList}\n                            localHandleAddPlayer={localHandleAddPlayer}\n                            setTeam={setTeam}\n                            team={team}\n                            /> :\n                            null\n                            } \n                                <h2>40-Man Roster</h2>\n                            {renderFortyMan}\n            ________________________________________________\n                                <h2>Minor Leagues</h2>\n                                {renderMinors}\n                            <br></br>\n                        <p className=\"roster-size\"><b>Roster Size: {salaryArray.length} players <p className=\"max-size\">Max Roster Size: 75</p></b> {75 - salaryArray.length} roster slots available</p>\n                    <b>Team Salary: </b><p>{totalSalary.toFixed(1)} million</p>\n                <p className=\"cap\">Salary Cap: 155.0 million </p>\n            <p className=\"available-salary\">Available Salary: {155.0 - totalSalary.toFixed(1)} million</p>\n        </div>\n        </div>\n        </>\n    )\n}\n\nexport default TeamPage;","/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Forms/Buyout.js",[],"/Users/gooseisdead/Flatiron/code/progm-fa/progm-fa-frontend/src/Forms/NonTender.js",[],{"ruleId":"28","severity":1,"message":"29","line":14,"column":12,"nodeType":"30","messageId":"31","endLine":14,"endColumn":23},{"ruleId":"28","severity":1,"message":"32","line":14,"column":25,"nodeType":"30","messageId":"31","endLine":14,"endColumn":39},{"ruleId":"33","severity":2,"message":"34","line":14,"column":52,"nodeType":"30","messageId":"35","endLine":14,"endColumn":53},{"ruleId":"36","severity":1,"message":"37","line":40,"column":49,"nodeType":"38","messageId":"39","endLine":40,"endColumn":51},{"ruleId":"36","severity":1,"message":"37","line":52,"column":47,"nodeType":"38","messageId":"39","endLine":52,"endColumn":49},"no-unused-vars","'showOptions' is assigned a value but never used.","Identifier","unusedVar","'setShowOptions' is assigned a value but never used.","no-undef","'f' is not defined.","undef","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd"]